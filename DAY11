****************************************************************************************************************************************************************************************
Subsets

Solution
Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
*****************************************************************************************************************************************************************************************
class Solution {
public:
    vector<vector<int>> subsets(vector<int>& nums) {
       vector<vector<int>> result;
       vector<int> aux_buf;
       return subsetsUtil(result,nums,aux_buf,0);
    }
    
    vector<vector<int>> subsetsUtil(vector<vector<int>>& result,vector<int>&nums,vector<int>&aux_buf,int startIndex){
        
        result.push_back(aux_buf);
       
        for(int i=startIndex; i<nums.size();i++){
            
            aux_buf.push_back(nums[i]);
            subsetsUtil(result,nums,aux_buf,i+1);
            aux_buf.pop_back();
        }
        return result;
    }
};
